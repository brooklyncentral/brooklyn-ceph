  - id: ceph-calamari-node
    name: "Ceph Calamari Node"
    description: |
      Calamari is a management and monitoring service for Ceph, exposing a high level REST API.
    itemType: entity
    iconUrl: "https://twitter.com/Ceph/profile_image?size=original"
    item:
      type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess
      name: "Ceph Calamari Node"
      
      brooklyn.parameters:
      - name: calamari.server.download.url
        label: "calamari.server.download.url"
        description: |
          Calamari server download URL
        type: string
        default: http://download.ceph.com/calamari/1.3.1/ubuntu/trusty/pool/main/c/calamari/calamari-server_1.3.1.1-1trusty_amd64.deb
      - name: calamari.clients.download.url
        label: "calamari.clients.download.url"
        description: |
          Calamari clients download URL
        type: string
        default: http://download.ceph.com/calamari/1.3.1/ubuntu/trusty/pool/main/c/calamari-clients/calamari-clients_1.3.1.1-1trusty_all.deb
      - name: diamond.download.url
        label: "diamond.download.url"
        description: |
          Diamond download URL
        type: string
        default: http://download.ceph.com/calamari/1.3.1/ubuntu/trusty/pool/main/d/diamond/diamond_3.4.67_all.deb
      - name: calamari.user
        label: "calamari.user"
        description: |
          The default calamari user
        type: string
        default: cloudsoft
      - name: calamari.password
        label: "calamari.password"
        description: |
          The default calamari password
        type: string
        default: pa55w0rd
      - name: calamari.email
        label: "calamari.email"
        description: |
          The default calamari email
        type: string
        default: test@cloudsoft.com
             
      provisioning.properties:
        osFamily: ubuntu
        osVersionRegex: 14
        imageNameRegex:
      
      brooklyn.enrichers:
        - type: org.apache.brooklyn.enricher.stock.Transformer
          brooklyn.config:
            uniqueTag: url-generator
            enricher.sourceSensor: host.subnet.hostname
            enricher.targetSensor: $brooklyn:sensor("org.apache.brooklyn.core.entity.Attributes", "main.uri")
            enricher.targetValue:
              $brooklyn:formatString:
              - "%s:%s"
              - $brooklyn:attributeWhenReady("host.address")
              - $brooklyn:config("calamari.port")
        
      brooklyn.config:
        calamari.port: 80
        shell.env:
 #         HOST_SUBNET_ADDRESS: $brooklyn:attributeWhenReady("host.subnet.address")
 #         RUN_DIR: $brooklyn:attributeWhenReady("run.dir")
 #         CEPH_CLUSTER_NAME: $brooklyn:config("ceph.cluster.name")
 #         CEPH_MON_FSID: $brooklyn:config("ceph.monitor.fsid")
 #         CEPH_MON_HOSTNAMES: $brooklyn:config("ceph.monitor.hostnames")
 #         CEPH_CLIENT_ADMIN_KEYRING: $brooklyn:config("ceph.client.admin.keyring")

          CALAMARI_SERVER_DOWNLOAD_URL: $brooklyn:config("calamari.server.download.url")
          CALAMARI_CLIENTS_DOWNLOAD_URL: $brooklyn:config("calamari.clients.download.url")
          DIAMOND_DOWNLOAD_URL: $brooklyn:config("diamond.download.url")
          CALAMARI_USERNAME: $brooklyn:config("calamari.user")
          CALAMARI_PASSWORD: $brooklyn:config("calamari.password")
          CALAMARI_EMAIL: $brooklyn:config("calamari.email")

        install.command: |
          echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get install --yes libcairo2 ruby1.9.1 ruby1.9.1-dev python-software-properties g++ make git debhelper build-essential devscripts apache2 libapache2-mod-wsgi libpq5 postgresql python-cairo salt-master salt-minion supervisor python-sqlalchemy python-mako python-markupsafe python-gevent python-msgpack python-zmq python-twisted python-txamqp python-greenlet
          wget -O calamari-server.deb ${CALAMARI_SERVER_DOWNLOAD_URL}
          wget -O calamari-clients.deb ${CALAMARI_CLIENTS_DOWNLOAD_URL}
          wget -O diamond.deb ${DIAMOND_DOWNLOAD_URL}
          
          sudo dpkg -i calamari-server*.deb calamari-clients*.deb
                  
        launch.command: |
          sudo calamari-ctl initialize --admin-username ${CALAMARI_USERNAME} --admin-email ${CALAMARI_EMAIL} --admin-password ${CALAMARI_PASSWORD}

        checkRunning.command: |
          echo true
