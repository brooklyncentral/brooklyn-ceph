brooklyn.catalog:
  version: "1.0.0-SNAPSHOT" # BROOKLYN_CEPH_VERSION
  publish:
    description: |
      Ceph Calamari is a management and monitoring service for Ceph, exposing a high level REST API.
    license_code: "APACHE-2.0"
    defaults:
      cephIconUrl: &cephIconUrl "https://twitter.com/Ceph/profile_image?size=original"
  items:
  - id: ceph-calamari-node
    name: "Ceph Calamari Node"
    description: |
      Calamari is a management and monitoring service for Ceph, exposing a high level REST API.
    itemType: entity
    iconUrl: "https://twitter.com/Ceph/profile_image?size=original"
    item:
      type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess
      name: "Ceph Calamari Node"
      
      brooklyn.parameters:
      - name: calamari.server.download.url
        label: "calamari.server.download.url"
        description: |
          Calamari server download URL
        type: string
        #default: http://download.ceph.com/calamari/1.3.1/ubuntu/trusty/pool/main/c/calamari/calamari-server_1.3.1.1-1trusty_amd64.deb
        default: https://github.com/ksingh7/ceph-calamari-packages/raw/master/CentOS-el7/calamari-server-1.3.0.1-63_g11f74e4.el7.centos.x86_64.rpm
      - name: calamari.clients.download.url
        label: "calamari.clients.download.url"
        description: |
          Calamari clients download URL
        type: string
        #default: http://download.ceph.com/calamari/1.3.1/ubuntu/trusty/pool/main/c/calamari-clients/calamari-clients_1.3.1.1-1trusty_all.deb
        default: https://github.com/ksingh7/ceph-calamari-packages/raw/master/CentOS-el7/calamari-clients-1.2.2-32_g931ee58.el7.centos.x86_64.rpm
      - name: diamond.download.url
        label: "diamond.download.url"
        description: |
          Diamond download URL
        type: string
        #default: http://download.ceph.com/calamari/1.3.1/ubuntu/trusty/pool/main/d/diamond/diamond_3.4.67_all.deb
        default: https://github.com/ksingh7/ceph-calamari-packages/raw/master/CentOS-el7/diamond-3.4.582-0.noarch.rpm
      - name: calamari.user
        label: "calamari.user"
        description: |
          The default calamari user
        type: string
        default: cloudsoft
      - name: calamari.password
        label: "calamari.password"
        description: |
          The default calamari password
        type: string
        default: pa55w0rd
      - name: calamari.email
        label: "calamari.email"
        description: |
          The default calamari email
        type: string
        default: test@cloudsoft.com

      #provisioning.properties:
      #  osFamily: ubuntu
      #  osVersionRegex: 14
      #  imageNameRegex:
      
      brooklyn.enrichers:
        - type: org.apache.brooklyn.enricher.stock.Transformer
          brooklyn.config:
            uniqueTag: url-generator
            enricher.sourceSensor: host.subnet.hostname
            enricher.targetSensor: $brooklyn:sensor("org.apache.brooklyn.core.entity.Attributes", "main.uri")
            enricher.targetValue:
              $brooklyn:formatString:
              - "%s:%s"
              - $brooklyn:attributeWhenReady("host.address")
              - $brooklyn:config("calamari.port")
        
      brooklyn.config:
        calamari.port: 80
        shell.env:
 #         HOST_SUBNET_ADDRESS: $brooklyn:attributeWhenReady("host.subnet.address")
 #         RUN_DIR: $brooklyn:attributeWhenReady("run.dir")
 #         CEPH_CLUSTER_NAME: $brooklyn:config("ceph.cluster.name")
 #         CEPH_MON_FSID: $brooklyn:config("ceph.monitor.fsid")
 #         CEPH_MON_HOSTNAMES: $brooklyn:config("ceph.monitor.hostnames")
 #         CEPH_CLIENT_ADMIN_KEYRING: $brooklyn:config("ceph.client.admin.keyring")

          CALAMARI_SERVER_DOWNLOAD_URL: $brooklyn:config("calamari.server.download.url")
          CALAMARI_CLIENTS_DOWNLOAD_URL: $brooklyn:config("calamari.clients.download.url")
          DIAMOND_DOWNLOAD_URL: $brooklyn:config("diamond.download.url")
          CALAMARI_USERNAME: $brooklyn:config("calamari.user")
          CALAMARI_PASSWORD: $brooklyn:config("calamari.password")
          CALAMARI_EMAIL: $brooklyn:config("calamari.email")

        install.command: |
        
          # ------------ Attempt at CentOS build
          #sudo -i
          #yum -y install git cairo ruby-devel make automake gcc gcc-c++ kernel-devel git debhelper httpd mod_wsgi postgresql-libs postgresql pycairo python-pip salt-master salt-minion supervisor python-sqlalchemy python-mako python-markupsafe python-gevent python-msgpack python-zmq python-greenlet
          #npm install -g bower grunt phantomjs
          #curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash
          #export NVM_DIR="$HOME/.nvm"
          #[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          #nvm install 5
          #yum -y install ruby
          #gem update 
          #gem install compass
          
          #git clone https://github.com/ceph/calamari-clients.git
          #cd calamari-clients
          #make build-real
          
          #dpkg-buildpackage
          #sudo dpkg -i calamari-clients*.deb
          #wget -O calamari-clients.deb ${CALAMARI_CLIENTS_DOWNLOAD_URL}
          
          #git clone https://github.com/ceph/calamari.git
          #cd calamari
          #dpkg-buildpackage
          #sudo dpkg -i calamari-server*.deb
          
          # ------------ Ubuntu deb install
          #echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections
          #export DEBIAN_FRONTEND=noninteractive
          #sudo apt-get install --yes libcairo2 ruby1.9.1 ruby1.9.1-dev python-software-properties g++ make git debhelper build-essential devscripts apache2 libapache2-mod-wsgi libpq5 postgresql python-cairo salt-master salt-minion supervisor python-sqlalchemy python-mako python-markupsafe python-gevent python-msgpack python-zmq python-twisted python-txamqp python-greenlet
          #wget -O calamari-server.deb ${CALAMARI_SERVER_DOWNLOAD_URL}
          #wget -O calamari-clients.deb ${CALAMARI_CLIENTS_DOWNLOAD_URL}
          #wget -O diamond.deb ${DIAMOND_DOWNLOAD_URL}
          #sudo dpkg -i calamari-server*.deb calamari-clients*.deb
          
          # ------------ CentOS deb install
          sudo yum -y install git wget cairo ruby-devel make automake gcc gcc-c++ kernel-devel git debhelper httpd mod_wsgi postgresql-libs postgresql postgresql-server pycairo python-pip redhat-lsb-core supervisor python-sqlalchemy python-mako python-markupsafe python-gevent python-msgpack python-zmq python-greenlet
          
          sudo yum -y install PyYAML m2crypto pciutils python-crypto python-jinja2 systemd-python yum-utils
          
          wget -O salt.rpm ftp://fr2.rpmfind.net/linux/fedora/linux/releases/22/Everything/x86_64/os/Packages/s/salt-2014.7.5-1.fc22.noarch.rpm
          wget -O salt-minion.rpm ftp://fr2.rpmfind.net/linux/fedora/linux/releases/22/Everything/x86_64/os/Packages/s/salt-minion-2014.7.5-1.fc22.noarch.rpm
          wget -O salt-master.rpm ftp://fr2.rpmfind.net/linux/fedora/linux/releases/22/Everything/x86_64/os/Packages/s/salt-master-2014.7.5-1.fc22.noarch.rpm
          
          sudo rpm -i salt.rpm
          sudo rpm -i salt-minion.rpm
          sudo rpm -i salt-master.rpm
          
          wget -O calamari-server.rpm ${CALAMARI_SERVER_DOWNLOAD_URL}
          wget -O calamari-clients.rpm ${CALAMARI_CLIENTS_DOWNLOAD_URL}
          wget -O diamond.rpm ${DIAMOND_DOWNLOAD_URL}
          sudo rpm -i calamari-server.rpm
          sudo rpm -i calamari-clients.rpm
          
        launch.command: |
          # patch for newer versions of salt - already done
          #sudo rm /opt/calamari/venv/lib/python2.7/site-packages/calamari_common-0.1-py2.7.egg/calamari_common/salt_wrapper.py
          #sudo wget -O /opt/calamari/venv/lib/python2.7/site-packages/calamari_common-0.1-py2.7.egg/calamari_common/salt_wrapper.py https://raw.githubusercontent.com/alexm/calamari/09e39b50dffac58c9ab6b10dd643c4b0e5dc2552/calamari-common/calamari_common/salt_wrapper.py
          
          sudo chmod -R 777 /var/log/calamari/
          sudo calamari-ctl initialize --admin-username ${CALAMARI_USERNAME} --admin-email ${CALAMARI_EMAIL} --admin-password ${CALAMARI_PASSWORD}
          
          # required for ubuntu
          #sudo chown www-data:www-data -R /var/log/calamari/
          
        checkRunning.command: |
          ps aux | grep [c]alamari-httpd
